<program>     ::= <element>+
<element>     ::= <definition> | <expression> | <require>

<require>     ::= ( require <string> )

<definition>  ::= ( define <identifier> <expression> )
				| ( define ( <identifier> <identifier>+ ) <expression> )

<expression>  ::= ( <expression> <expression>+ )
				| ( cond {( <expression> <expression> )}+ {( else <expression> )}? )
				| ( local ( <definition>+ ) ( <expression> ) )
			    | <identifier>
			    | <value>

<value>       ::= ( lambda ( <identifier>+ ) <expression> )
                | <integer>
			    | <float>
			    | <boolean>
			    | <string>
				| <builtin>
